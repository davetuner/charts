apiVersion: v1
kind: Service
metadata:
  name: {{ template "master-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
spec:
  ports:
  - name: spark-service
    port: {{ .Values.Master.ServicePort }}
    targetPort: {{ .Values.Master.ContainerPort }}
  - name: spark-rest
    port: {{ .Values.Rest.ServicePort }}
    targetPort: {{ .Values.Rest.ContainerPort }}
  - name: spark-ui-proxy
    port: {{ .Values.SparkUiProxy.ServicePort }}
    targetPort: {{ .Values.SparkUiProxy.ContainerPort }}
  selector:
    component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
  type: {{ .Values.Master.ServiceType }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "master-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
spec:
  replicas: {{ default 1 .Values.Master.Replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "{{ .Release.Name }}-{{ .Values.Master.Component }}"
    spec:
      containers:
        - name: {{ template "master-fullname" . }}
          image: "{{ .Values.Master.Image }}"
          imagePullPolicy: "{{ .Values.Master.ImagePullPolicy }}"
          ports:
            - containerPort: {{ .Values.WebUi.ContainerPort }}
            - containerPort: {{ .Values.Rest.ContainerPort }}
          resources:
            requests:
              cpu: "{{ .Values.Master.Cpu }}"
              memory: "{{ .Values.Master.Memory }}"
          env:
            - name: SPARK_DAEMON_MEMORY
              value: {{ default "1g" .Values.Master.DaemonMemory | quote }}
            - name: SPARK_MASTER_PORT
              value: {{ .Values.Master.ServicePort | quote }}
            - name: SPARK_MASTER_WEBUI_PORT
              value: {{ .Values.WebUi.ContainerPort | quote }}  
            - name: PYSPARK_PYTHON
              value: {{ .Values.Pyspark.PythonVersion }} 
            - name: PYSPARK_DRIVER_PYTHON
              value: {{ .Values.Pyspark.PythonVersion }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Aws.SecretName }}
                  key: aws_secret_access_key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Aws.SecretName }}
                  key: aws_access_key_id
        - name: {{ template "spark-ui-proxy-fullname" . }}
          image: "{{ .Values.SparkUiProxy.Image }}"
          imagePullPolicy: "{{ .Values.SparkUiProxy.ImagePullPolicy }}"
          ports:          
            - containerPort: {{ .Values.SparkUiProxy.ContainerPort }}
          resources:
            requests:
              cpu: "{{ .Values.SparkUiProxy.Cpu }}"
              memory: "{{ .Values.SparkUiProxy.Memory }}"
          env:
            - name: SERVER_PORT
              value: {{ .Values.SparkUiProxy.ContainerPort | quote }}
            - name: SPARK_MASTER_HOST
              value: "localhost"
            - name: SPARK_MASTER_PORT
              value: {{ .Values.WebUi.ContainerPort | quote }} 




